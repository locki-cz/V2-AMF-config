###################################
######  MAX_FLOW_CALIBRATE   ######
###################################
# Written by fboc#1751 
# @version: 1.0beta

# CHANGELOG:
#   v1.0beta: beta release

# What is it ? 
# A bunch of macros to determine max flow value to use is your slicer setting.

# Sources : https://manual.slic3r.org/advanced/flow-math

# Usage:
#   1. Make sure your axis are homed, your bed mesh is loaded (if you are using one), both the hotend and the bed are at the temperature required for your filament
#      and the machine ready to print something.
#   2. Print the shell by typing in the klipper console (using Mainsail/Fluidd/Octoprint):
#      MAX_FLOW_CALIBRATION [args... like START_FLOW=4]
#   3. Check the print to track under extrusion (a backlight can help), Measure the pattern form bottom to under extruded zone
#      and call the computation macro with it: COMPUTE_MAX_FLOW LENGTH=xxxx in mm
#   -> You will see the computed max_flow printed in the console. You can then copy and paste it in your prefered slicer.

# Available input parameters for MAX_FLOW_CALIBRATION :
#    START_FLOW          : default(4)     min flow in mm^3/s at start
#    END_FLOW            : default(30)    max flow to test in mm^3/s
#    SIZE                : default("70,70") width, length in mm, size that the test will use on the bed. The model will be printed in the middle of the bed

#    FILAMENT_DIAMETER   : default(1.75)  diameter of the filament currently loaded in the machine
#    EXTRUSION_WIDTH     : default(0.4)   width of an extrusion line (used as a goal). Using 0.4 for a 0.4mm diameter nozzle is a safe bet
#    LAYER_HEIGHT        : default(0.2)   layer height of the print. Avoid too small layer height and try to be close to 0.5 * nozzle diameter

# ================================================================================================================================================
# DO NOT MODIFY THOSE VARIABLES (they are used internaly by the flow calibration macro)

[gcode_macro _MAX_FLOW_VARIABLES]
variable_start_flow: 0.0
variable_end_flow: 0.0
variable_test_length: 0.0
gcode:

[gcode_macro MAX_FLOW_CALIBRATION]
gcode:
    ## Get input parameters
    {% set start_flow = params.START_FLOW|default(4)|float %}
    {% set end_flow = params.END_FLOW|default(30)|float %}
    {% set width, test_length = (params.SIZE|default("70,70")).split(',')|map("trim")|map('float') %}
    {% set e_w = params.EXTRUSION_WIDTH|default(0.45)|float %}
    {% set e_h = params.LAYER_HEIGHT|default(0.2)|float %}
    {% set filament_diameter = params.FILAMENT_DIAMETER|default(1.75)|float %}
    
    ## Get printer config variables
    {% set accel  = printer.configfile.settings.printer.max_accel|int %}
    {% set max_speed  = printer.configfile.settings.printer.max_velocity|int %}
    {% set z_speed = printer.configfile.settings.printer.max_z_velocity|int /2 %}
    {% set x_min = printer.configfile.config.stepper_x.position_min|default(0)|float + 20 %}
    {% set x_max = printer.configfile.config.stepper_x.position_max|float - 20 %}
    {% set y_min = printer.configfile.config.stepper_y.position_min|default(0)|float + 20 %}
    {% set y_max = printer.configfile.config.stepper_y.position_max|float - 20 %}
    
    ## Store parameters for COMPUTE_MAX_FLOW
    SET_GCODE_VARIABLE MACRO=_MAX_FLOW_VARIABLES VARIABLE=start_flow VALUE={start_flow}
    SET_GCODE_VARIABLE MACRO=_MAX_FLOW_VARIABLES VARIABLE=end_flow VALUE={end_flow}
    SET_GCODE_VARIABLE MACRO=_MAX_FLOW_VARIABLES VARIABLE=test_length VALUE={test_length}
    
    ## Compute variables
    {% set filament_area = 3.14159*(filament_diameter/2)**2 %}
    {% set void_area_raft = (0.5 - 0.3)*0.3 + 3.14159 * (0.3/2)**2  %}
    {% set spacing_raft = 0.5 %}
    
    {% set void_area = (e_w - e_h)*e_h + 3.14159 * (e_h/2)**2 %}
    {% set spacing = e_w - e_h * (1 - (3.14159/4)) %}
    
    {% set top_speed = end_flow / void_area %}
    {% set max_accel_length = top_speed**2/accel %}
    {% set max_flow = void_area * max_speed|float %}
    {% set x_center = (x_max + x_min) / 2  %}
    {% set y_center = (y_max + y_min) / 2 %}
    {% set x_start = x_center - width/2 %}
    {% set y_start = y_center - test_length/2 %}
    {% set x_end = x_center + width/2 %}
    {% set y_end = y_center + test_length/2 %}

    ## Check availability of settings
    {% if max_flow < end_flow %}
        {action_raise_error("You cannot reach %.1f mm^3/s with your settings" % max_flow
                        + " you should either increase EXTRUSION_WITH/EXTRUSION_HEIGHT or reduce END_FLOW")}
    {% endif %}
    {% if max_accel_length > width + 20 %}
        {action_raise_error("Your settings does not allow to test max_flow "
                        + " you should either reduce END_FLOW or increase SIZE width")}
    {% endif %}
    
    ## Display usage
    {action_respond_info("When the printing pattern will be done, measure from the bottom to the first under extrusion in mm"
                        ". Use a backlight to determine underextrusion zone.\n"
                        " Then compute COMPUTE_MAW_FLOW LENGTH=\<measure in mm\> to obtain the maximum flow value.")}

    {% if printer.extruder.can_extrude %}
        SAVE_GCODE_STATE ID=MAX_FLOW_CALIBRATION_STATE
        # apply max velocity if modified previously 
        SET_VELOCITY_LIMIT VELOCITY={max_speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
        
        G92 E0
        M83
        G90
        G0 X{x_start - 1} Y{y_start - 1} F{max_speed*60}
        # Do Raft
        G0 Z0.3 F{z_speed*60}
        G0 E1 F1500
        
        G91
        {% for i in range((width/spacing_raft)|int+2) %}
            G0 Y{ loop.cycle(test_length+2,0-test_length-2)} E{void_area_raft * test_length / filament_area} F{900/void_area_raft}
            {% if not loop.last %}
                G0 X{spacing_raft} F{max_speed*60}
            {% endif %}
        {% endfor %}
        G90
        G0 E-1 F2500
        G0 Z{0.3 + e_h} F{z_speed*60}
    
       
        ## Draw lines increasing velocity
        {% set _last_flow = 0 %}
        {% for l in range((test_length/spacing)|int +1)%}
            {% set test_flow = start_flow + l / ((test_length/spacing)|int)*(end_flow-start_flow) %}
            {% if _last_flow != test_flow|int %}
              M117 FLOW {test_flow|int} mm^3/s
              M118 FLOW {test_flow|int} mm^3/s
              {% set _last_flow= test_flow|int %}
            {% endif %}
            {% set test_speed = test_flow/void_area %}
            {% set test_width = test_speed**2/accel + width - max_accel_length %}
            {% set test_way=loop.cycle(1,-1) %}
            G0 X{x_center - (test_way*test_width/2)} Y{y_start+l*spacing} F{max_speed*60}
            {% if loop.first %}
                  G0 E1 F2500
            {% endif %}
            G0 X{x_center + (test_way*test_width/2)} E{void_area * test_width / filament_area} F{test_speed*60}   
        {% endfor %}

        G0 E-1 F2500
        G0 Z{0.3 + 2*e_h} F{z_speed*60}
        G0 X{x_center - (width - max_accel_length)/2 } F{max_speed*60}
        G0 E1 F2500
        G0 Y{y_start} E{void_area * test_length / filament_area} F{600 /void_area}
        G0 E-1 F2500
        G0 X{x_center + (width - max_accel_length)/2 } F{max_speed*60}
        G0 E1 F2500
        G0 Y{y_end} E{void_area * test_length / filament_area} F{600 /void_area}
        G0 E-1 F2500

        RESTORE_GCODE_STATE ID=MAX_FLOW_CALIBRATION_STATE

    {% endif %}

[gcode_macro COMPUTE_MAX_FLOW]
gcode:
  {% set vars=printer['gcode_macro _MAX_FLOW_VARIABLES'] %}
  {% set measure = params.LENGTH|default(0)|float %}
  {% if measure > vars.test_length %}
    {action_raise_error("Measure should be smaller than test %s" % vars.test_length)}
  {% endif %}
  {action_respond_info("Max flow : %s mm^3/s" % (vars.start_flow + (measure/vars.test_length)*(vars.end_flow - vars.start_flow)))}