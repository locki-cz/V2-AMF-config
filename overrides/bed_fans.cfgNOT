# If the machine is equiped by a temperature sensor in the chamber
# it will be used to measure and control the chamber heatsoak
#[gcode_macro _USER_VARIABLES]
#variable_chamber_temperature_sensor_enabled: True
#variable_chamber_temperature_sensor_name: "Chamber"
#gcode:
#
#[heater_generic Chamber]
#heater_pin: EXHAUST_FAN
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: CHAMBER_TEMPERATURE
#control: pid
#pid_Kp: 61
#pid_Ki: 0.5
#pid_Kd: 0
#pwm_cycle_time: 0.1
#min_temp: -273.15
#max_temp: 75 #if the chamber ever goes above this, error out
#
#[verify_heater Chamber]
#max_error: 120
#check_gain_time: 120
#hysteresis: 50
#heating_gain: 1

#[gcode_macro SET_CHAMBER]
#gcode:
#  {% set chamber_target = params.CHAMBER_TEMP|default(0)|float %}
#  SET_HEATER_TEMPERATURE heater=Chamber target={chamber_target}



[gcode_macro _USER_VARIABLES]
variable_bedfan_enabled: True
gcode:

[fan_generic bed_fan]
pin: EXHAUST_FAN
#cycle_time: 0.05
kick_start_time: 0.5

##[include ../../../macros/miscs/bedfan_automation.cfg]

## copied from https://github.com/VoronDesign/VoronUsers/blob/master/printer_mods/Ellis/Bed_Fans

[gcode_macro BEDFANSSLOW]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _USER_VARIABLES"].bedfan_slow|float %}
	
	SET_FAN_SPEED FAN=bed_fan SPEED={SLOW}

[gcode_macro BEDFANSFAST]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _USER_VARIABLES"].bedfan_fast|float %}
	
	SET_FAN_SPEED FAN=bed_fan SPEED={FAST}

[gcode_macro BEDFANSOFF]
gcode:
	SET_FAN_SPEED FAN=bed_fan SPEED=0

############ Command overrides ############

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _USER_VARIABLES"].bedfan_temp_threshold|int %}
	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			BEDFANSSLOW
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1
		{% else %}
			BEDFANSOFF
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
	
# Override M190 (Wait for Bed Temperature)
# As a bonus, use TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _USER_VARIABLES"].bedfan_temp_threshold|int %}
	
	{% if S >= THRESHOLD %}
		BEDFANSSLOW																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		BEDFANSOFF																# < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	  
	{% if S != 0 %}
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	# Wait for bed temp within 5 degrees
	{% endif %}

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BEDFANSFAST																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}
	
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BEDFANSOFF
	_TURN_OFF_HEATERS
	
################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _USER_VARIABLES"].bedfan_temp_threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BEDFANSFAST															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}