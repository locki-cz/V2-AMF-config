######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
# ----------------------------------------------------------------------------------------> For ERCF/MMU users this lines must NOT be selected!!!
### --------------------------------------------------------------------------------------
# [include config/hardware/extruder/TMC/TMC2209.cfg]    # For ERCF/MMU users this lines must NOT be selected!!!
# [include config/hardware/extruder/TMC/TMC2240.cfg]    # For ERCF/MMU users this lines must NOT be selected!!!
# ----------------------------------------------------------------------------------------


#--------------------------------------#
#### BTT Octopus MCU definition ########
#--------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board work by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_31003D000950534E4E313020-if00
# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------

[include config/mcu_definitions/main/BTT_Octopus.cfg] # Do not remove this line
[board_pins octopus_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_MOTOR0_STEP   , X_DIR=MCU_MOTOR0_DIR   , X_ENABLE=MCU_MOTOR0_ENABLE   , X_TMCUART=MCU_MOTOR0_UART   ,
    Y_STEP=MCU_MOTOR1_STEP   , Y_DIR=MCU_MOTOR1_DIR   , Y_ENABLE=MCU_MOTOR1_ENABLE   , Y_TMCUART=MCU_MOTOR1_UART   ,

    Z_STEP=MCU_MOTOR2_1_STEP , Z_DIR=MCU_MOTOR2_1_DIR , Z_ENABLE=MCU_MOTOR2_1_ENABLE , Z_TMCUART=MCU_MOTOR2_1_UART ,
    Z1_STEP=MCU_MOTOR3_STEP  , Z1_DIR=MCU_MOTOR3_DIR  , Z1_ENABLE=MCU_MOTOR3_ENABLE  , Z1_TMCUART=MCU_MOTOR3_UART  ,
    Z2_STEP=MCU_MOTOR4_STEP  , Z2_DIR=MCU_MOTOR4_DIR  , Z2_ENABLE=MCU_MOTOR4_ENABLE  , Z2_TMCUART=MCU_MOTOR4_UART  ,
    Z3_STEP=MCU_MOTOR5_STEP  , Z3_DIR=MCU_MOTOR5_DIR  , Z3_ENABLE=MCU_MOTOR5_ENABLE  , Z3_TMCUART=MCU_MOTOR5_UART  ,

    E_STEP=MCU_MOTOR6_STEP   , E_DIR=MCU_MOTOR6_DIR   , E_ENABLE=MCU_MOTOR6_ENABLE   , E_TMCUART=MCU_MOTOR6_UART   ,

    # DRIVER_SPI_MOSI=EXP2_6 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_MISO=EXP2_1 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    # DRIVER_SPI_SCK=EXP2_2  , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_STOP0 , Y_STOP=MCU_STOP1 , Z_STOP=MCU_STOP2 ,
    PROBE_INPUT=MCU_STOP7  ,
    RUNOUT_SENSOR=MCU_STOP3 ,

    E_HEATER=MCU_HE0   , E_TEMPERATURE=MCU_T0   ,
    BED_HEATER=MCU_HE1 , BED_TEMPERATURE=MCU_TB ,

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 ,
    CONTROLLER_FAN=MCU_FAN2        ,
    EXHAUST_FAN=MCU_FAN3           ,
    FILTER_FAN=MCU_FAN4            ,
    HOST_CONTROLLER_FAN=MCU_FAN5   ,

    CHAMBER_TEMPERATURE=MCU_T1 , ELECTRICAL_CABINET_TEMPERATURE=MCU_T2 ,

    LIGHT_OUTPUT=MCU_HE2         ,
    LIGHT_NEOPIXEL=MCU_STOP5     ,
    STATUS_NEOPIXEL=MCU_NEOPIXEL ,

    SERVO_PIN=MCU_SERVOS ,


#-------------------------------------------#
#### Mellow SB2040 v1 MCU definition ########
#-------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
canbus_uuid: f8e99ad69148
##--------------------------------------------------------------------

# If you want to override the wiring of the Mellow SB2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/toolhead/Mellow_SB2040_v1.cfg] # Do not remove this line
[board_pins sb2040_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_EMOT_STEP , E_DIR=MCU_EMOT_DIR , E_ENABLE=MCU_EMOT_EN , E_TMCUART=MCU_EMOT_UART ,

#    X_STOP=MCU_ENDSTOP ,
    PROBE_INPUT=MCU_5V_ENDSTOP ,
    TOOLHEAD_SENSOR=MCU_ENDSTOP ,
    RUNOUT_SENSOR=MCU_HV_ENDSTOP ,

    E_HEATER=MCU_HEAT , E_TEMPERATURE=MCU_TEMP , CHAMBER_TEMPERATURE=MCU_ONBOARD_NTCK100K ,

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 ,

    STATUS_NEOPIXEL=MCU_RGB ,

    ADXL_CS=MCU_ADXL_CS , ADXL_SCLK=MCU_ADXL_SCK , ADXL_MOSI=MCU_ADXL_MOSI , ADXL_MISO=MCU_ADXL_MISO ,


#----------------------------------------#
#     Mellow SB2040 v1 pins remapping    #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

# # Note for MMU/ERCF: some pin in [extruder] section must be commented out!!!
# # and reported in the [manual_extruder_stepper extruder] section in mmu/base/mmu_hardware.cfg
[extruder]
# step_pin: toolhead:E_STEP
# dir_pin: toolhead:E_DIR
# enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE

[probe]
pin: ^toolhead:PROBE_INPUT

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
# [stepper_x]
# endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

# # Note for MMU/ERCF: all this [tmc2209 extruder] section must be commented out!!!
# # and reported in the [tmc2209 manual_extruder_stepper extruder] section in mmu/base/mmu_hardware.cfg
# [tmc2209 extruder]
# uart_pin: toolhead:E_TMCUART


#--------------------------------------------------#
#### Tircown ERCF easybrd MCU definition ###########
#--------------------------------------------------#

[mcu mmu]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_samd21g18a_8A4452224134555020312E302A0918FF-if00
##--------------------------------------------------------------------

# If you want to override the wiring of the ERCF easy brd, keep in mind that this
# board is defined using the "ercf" name. So you should use "pin: ercf:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/mmu/Tircown_ERCF_easy_brd.cfg] # Do not remove this line
[board_pins mmu_mcu]
mcu: mmu
aliases:
    MMU_GEAR_STEP=MCU_GEAR_STEP    , MMU_GEAR_DIR=MCU_GEAR_DIR    , MMU_GEAR_ENABLE=MCU_GEAR_ENABLE    , MMU_GEAR_UART=MCU_TMCUART      ,
    MMU_SEL_STEP=MCU_SELECTOR_STEP , MMU_SEL_DIR=MCU_SELECTOR_DIR , MMU_SEL_ENABLE=MCU_SELECTOR_ENABLE , MMU_SEL_UART=MCU_SELECTOR_UART ,
    MMU_SEL_DIAG=MCU_SELECTOR_DIAG ,

    MMU_GEAR_ENDSTOP=MCU_GEAR_STOP , MMU_SEL_ENDSTOP=MCU_SELECTOR_STOP ,

    MMU_SERVO=MCU_SERVO ,

    MMU_ENCODER=MCU_ENCODER ,

